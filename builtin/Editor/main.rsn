import rscene.std;
import je.gui;
import je.editor;

import script_editor;
import worldlist;
import entitylist;

import generic.AskFor;

// 这个是编辑器上方的主菜单栏
func Editor_MainMenuBar()
{
    using je::gui;

    BeginMainMenuBar();
    if (BeginMenu("JoyEngine"))
    {
        MenuItem("打开");
        Separator();
        if (MenuItem("退出"))
            launch(generic::AskFor, "确认退出", "即将关闭JoyEngine，是否继续？", je::editor::exit);

        EndMenu();
    }
    if (BeginMenu("编辑", false))
    {
        EndMenu();
    }
    if (BeginMenu("视图"))
    {
        static var active_worlds_shown = false;
        static var active_world_entitys_shown = false;
        static var inspector_shown = false;

        if (MenuItem("活动世界列表", ref active_worlds_shown, true) && active_worlds_shown)
            launch(editor::Form_WorldList, ref active_worlds_shown);
        if (MenuItem("层级面板", ref active_world_entitys_shown, true) && active_world_entitys_shown)
            launch(editor::Form_EntityList, ref active_world_entitys_shown);
        if (MenuItem("检视面板", ref inspector_shown, true) && inspector_shown)
            /*Inspector*/; // TODO

        EndMenu();
    }
     if (BeginMenu("脚本"))
    {
        static var editor_opened = false;

        if (MenuItem("打开快捷编辑器", ref editor_opened, true) && editor_opened)
            launch(Editor_ScriptEditor, ref editor_opened);

        EndMenu();
    }
    if (BeginMenu("帮助"))
    {
        if (MenuItem("关于"))
            je::gui::launch(Editor_Welcome);

        EndMenu();
    }
    EndMainMenuBar();
}

// 关于信息窗口
func Editor_Welcome()
{
    using je::gui;

    var exit = false;

    Begin("欢迎", WindowsAttribute::ImGuiWindowFlags_NoResize);
    Text("欢迎使用JoyEngineECS.");
    Separator();
    Text("Copyright (C)Cinogama project. 2022.");
    Text("Powered by RestorableScene (C)Cinogama project. 2022.");
    Text("所使用的第三方库包括glew、glfw、imgui及stb的相关信息见版权页");
    if (Button("确认"))
        exit = true;
    End();

    return exit;
}

je::gui::launch(Editor_MainMenuBar);
je::gui::launch(Editor_Welcome);

func Editor_Test()
{
    using je::gui;
    var opened = true;

    Begin("测试窗口", 0, ref opened);
        if (Button("关闭"))
            opened = false;

    static var ListboxSelectItem = -1;
    if (ListBox("##", ["AAA", "BBBBBBBB", "CCCC", "DDDDDDD", "EEE", "FFF"], ref ListboxSelectItem, 2))
    {

    }
    End();

    return !opened;
}
je::gui::launch(Editor_Test);
