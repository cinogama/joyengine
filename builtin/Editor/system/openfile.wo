// openfile.wo
// 用于管理指定类型的文件/目录的打开方式

import woo.std;
import woo.thread;

import je.gui;
import je.filesys;

import builtin.Editor.generic.form.msgbox;

using je::gui;
using generic;

namespace editor::OpenFile
{
	let registed_open_method = {
		["jeworld"] = \p: Browser::PathInfo = Project::GetCurrentProject()
			->LoadWorld(p.path)
			->map(\w: Project::World = w.instance->WorldList::SwitchEditingWorld;);,
	}: map<string, (Browser::PathInfo)=>void>;

	func _open_impl(file: Browser::PathInfo)
	{
		match(registed_open_method->get(file.externname))
		{
		value(action)?
			action(file);
		none?
			// je::filesys::open本质上是一个system("...")函数
			// 后续考虑一下是否要求所有文件必须提前注册打开方法，
			// 否则 launch(MsgBox, ("打开文件失败", F"无法打开未知类型({file.externname})的文件")); 
			je::filesys::open(file.path);
		}
	}

	public func open(file: Browser::PathInfo)
	{
		// 单独起一个线程来处理文件打开事务
		std::thread(_open_impl, (file,));
	}
}