import woo::std;
import je;
import pkg::worst;
import builtin::api::serialize::main;

namespace jeapi::loader
{
    using worldloader = struct{
        __m_world: je::world,
        __m_data: serialize::WorldData,
    }
    {
        public func create(u: je::universe, wpath: string)
        {
            return je::file::readall(wpath)
                =>> \dat = dat->dict::deserialize;
                =>> \dat = dat: dynamic->trycast:<serialize::WorldData::WorldDataRawType>;
                ->> \dat = worldloader{
                        __m_world = je::world::create(u),
                        __m_data = dat: serialize::WorldData,
                    }
                    ;
                ;
        }
        public func instance_entity(self: worldloader)
        {
            jeapi::serialize::world::instantiate_entities(self.__m_world, self.__m_data, false);
        }
        public func instance_system(self: worldloader)
        {
            jeapi::serialize::world::instantiate_systems(self.__m_world, self.__m_data, false);
        }
        public func get_world(self: worldloader)
        {
            return self.__m_world;
        }
        public func finish(self: worldloader)
        {
            self.__m_world->set_able(true);
            return self.__m_world;
        }
    }
}
