import je;
import je::gui;

using je;
using je::gui;
using je::graphic;

namespace jeapi::gui::widget
{
    public func accept_file_for_current_widget()=> option<string>
    {
        using je::gui;

        if(BeginDragDropTarget())
        {
            let some_data_drag = AcceptDragDropPayload("JEDITOR_FILE_PATH");
            EndDragDropTarget();

            match (some_data_drag)
            {
            value(data)?
                return option::value(data);
            none?
                ;
            }
        }
        return option::none;
    }

    let mut registered_click_file_button_callback = option::none: option<(string)=>void>;
    public func register_click_file_callback(c: (string)=> void)
    {
        registered_click_file_button_callback = option::value(c);
    }

    public func File(name: string, path: string)
    {
        using je::gui;

        let fnd = name->find("##");

        Text(fnd == -1 ? name | name->subto(0, fnd));
        SameLine();
        if (Button((path == ""? "<ç©º>" | path) + F"##{name}"))
        {
            // Open File dialog?
            match (registered_click_file_button_callback)
            {
            value(c)? c(path);
            none?;
            }
        }
        let is_hovered = IsItemHovered();
        let drag_result = accept_file_for_current_widget();

        if (is_hovered)
        {
            BeginTooltip();
            Text(path);
            EndTooltip();
        }

        return drag_result;
    }
}