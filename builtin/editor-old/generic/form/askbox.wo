import woo.std;
import je.gui;

namespace generic
{
    func AskBox(title:string, shown:string, trigger:(bool)=>void)
    {
        using je::gui;

        let mut open = true;

        BeginAttr(F"{title}##{JobID()}", WindowsAttribute::ImGuiWindowFlags_AlwaysAutoResize);
        {
            Text(shown);
            if (Button("确定"))
            {
                trigger(true);
                open = false;
            }
            SameLine();
            if (Button("取消"))
            {
                trigger(false);
                open = false;
            }
        }
        End();

        if (!open)
            return FormAction::Close;
        return FormAction::Nothing;
    }
    public func askbox(title: string, shown: string, trigger: (bool)=>void)
    {
        je::gui::launch(AskBox, (title, shown, trigger));
    }

    public enum CheckResult
    {
        YES,
        NO,
        CANCEL
    }

    public func checkbox(title: string, shown: string, checker:(CheckResult)=>anything)
    {
        using je::gui;
        launch(func(){
            let mut open = true;
            BeginAttr(F"{title}##{JobID()}", WindowsAttribute::ImGuiWindowFlags_AlwaysAutoResize);
            {
                Text(shown);
                if (Button("是"))
                {
                    checker(CheckResult::YES);
                    open = false;
                }
                SameLine();
                if (Button("否"))
                {
                    checker(CheckResult::NO);
                    open = false;
                }
                SameLine();
                if (Button("取消"))
                {
                    checker(CheckResult::CANCEL);
                    open = false;
                }
            }
            End();

            if (!open)
                return FormAction::Close;
            return FormAction::Nothing;
        }, ());
    }
}