// THIS FILE IS AUTO GENERATED BY /script/build.wo

#define JE_IMPL
#define JE_ENABLE_DEBUG_API
#include "jeecs.hpp"

#if JE4_STATIC_LINK_MODULE_AND_PKGS
WO_API wo_api async_create(wo_vm vm, wo_value args);
WO_API wo_api async_dispatch(wo_vm vm, wo_value args);

WO_API wo_api buffer_append_buffer_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_append_buffer_builder_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_append_f32_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_append_f64_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_append_handle_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_append_i16_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_append_i32_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_append_i64_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_append_i8_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_append_string_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_append_ui16_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_append_ui32_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_append_ui8_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_appenddouble_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_appendfloat_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_appendi16_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_appendi32_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_appendi64_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_appendi8_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_appendui16_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_appendui32_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_appendui64_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_appendui8_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_clear_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_create_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_create_from_allocation_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_create_from_buffer_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_create_from_file_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_createdouble_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_createfloat_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_createi16_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_createi32_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_createi64_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_createi8_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_createui16_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_createui32_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_createui64_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_createui8_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_find_break_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_find_cchar_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_find_string_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_int_i16(wo_vm vm, wo_value args);
WO_API wo_api buffer_int_i16_be(wo_vm vm, wo_value args);
WO_API wo_api buffer_int_i16_le(wo_vm vm, wo_value args);
WO_API wo_api buffer_int_i32(wo_vm vm, wo_value args);
WO_API wo_api buffer_int_i32_be(wo_vm vm, wo_value args);
WO_API wo_api buffer_int_i32_le(wo_vm vm, wo_value args);
WO_API wo_api buffer_int_i64_be(wo_vm vm, wo_value args);
WO_API wo_api buffer_int_i64_le(wo_vm vm, wo_value args);
WO_API wo_api buffer_int_ui16(wo_vm vm, wo_value args);
WO_API wo_api buffer_int_ui16_be(wo_vm vm, wo_value args);
WO_API wo_api buffer_int_ui16_le(wo_vm vm, wo_value args);
WO_API wo_api buffer_int_ui32(wo_vm vm, wo_value args);
WO_API wo_api buffer_int_ui32_be(wo_vm vm, wo_value args);
WO_API wo_api buffer_int_ui32_le(wo_vm vm, wo_value args);
WO_API wo_api buffer_length_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_open_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_peek_buffer_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_peek_f32_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_peek_f64_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_peek_handle_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_peek_i16_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_peek_i32_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_peek_i64_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_peek_i8_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_peek_ui16_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_peek_ui32_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_peek_ui8_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_peekdouble_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_peekfloat_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_peeki16_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_peeki32_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_peeki64_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_peeki8_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_peekui16_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_peekui32_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_peekui64_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_peekui8_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_ptr_to_read_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_ptr_to_write_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_random(wo_vm vm, wo_value args);
WO_API wo_api buffer_read_buffer_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_read_f32_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_read_f64_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_read_handle_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_read_i16_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_read_i32_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_read_i64_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_read_i8_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_read_ui16_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_read_ui32_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_read_ui8_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_reduce_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_resize_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_sub_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_subto_buffer(wo_vm vm, wo_value args);
WO_API wo_api buffer_trim_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_write_f32_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_write_f64_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_write_handle_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_write_i16_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_write_i32_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_write_i64_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_write_i8_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_write_ui16_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_write_ui32_builder(wo_vm vm, wo_value args);
WO_API wo_api buffer_write_ui8_builder(wo_vm vm, wo_value args);

WO_API wo_api process_create_process(wo_vm vm, wo_value args);
WO_API wo_api process_flock_create(wo_vm vm, wo_value args);
WO_API wo_api process_flock_lock(wo_vm vm, wo_value args);
WO_API wo_api process_flock_trylock(wo_vm vm, wo_value args);
WO_API wo_api process_flock_unlock(wo_vm vm, wo_value args);
WO_API wo_api process_getpid(wo_vm vm, wo_value args);
WO_API wo_api process_wait_process(wo_vm vm, wo_value args);

WO_API wo_api wo_libimage_create_image(wo_vm vm, wo_value args);
WO_API wo_api wo_libimage_get_pix_from_image(wo_vm vm, wo_value args);
WO_API wo_api wo_libimage_get_size_of_image(wo_vm vm, wo_value args);
WO_API wo_api wo_libimage_open_image(wo_vm vm, wo_value args);
WO_API wo_api wo_libimage_save_image(wo_vm vm, wo_value args);
WO_API wo_api wo_libimage_set_pix_to_image(wo_vm vm, wo_value args);

WO_API wo_api crashhandler_init(wo_vm vm, wo_value args);

WO_API wo_api regex_create(wo_vm vm, wo_value args);
WO_API wo_api regex_match(wo_vm vm, wo_value args);
WO_API wo_api regex_replace(wo_vm vm, wo_value args);
WO_API wo_api regex_search(wo_vm vm, wo_value args);
WO_API wo_api regex_search_next(wo_vm vm, wo_value args);

WO_API wo_api file_is_same_file(wo_vm vm, wo_value args);
WO_API wo_api file_readall(wo_vm vm, wo_value args);
WO_API wo_api file_writeall(wo_vm vm, wo_value args);
WO_API wo_api filesys_copy(wo_vm vm, wo_value args);
WO_API wo_api filesys_create_recursive_walk(wo_vm vm, wo_value args);
WO_API wo_api filesys_create_walk(wo_vm vm, wo_value args);
WO_API wo_api filesys_exist(wo_vm vm, wo_value args);
WO_API wo_api filesys_extension(wo_vm vm, wo_value args);
WO_API wo_api filesys_filename(wo_vm vm, wo_value args);
WO_API wo_api filesys_isdir(wo_vm vm, wo_value args);
WO_API wo_api filesys_isfile(wo_vm vm, wo_value args);
WO_API wo_api filesys_last_write_time(wo_vm vm, wo_value args);
WO_API wo_api filesys_mkdir(wo_vm vm, wo_value args);
WO_API wo_api filesys_move(wo_vm vm, wo_value args);
WO_API wo_api filesys_normalize(wo_vm vm, wo_value args);
WO_API wo_api filesys_parent(wo_vm vm, wo_value args);
WO_API wo_api filesys_purename(wo_vm vm, wo_value args);
WO_API wo_api filesys_realpath(wo_vm vm, wo_value args);
WO_API wo_api filesys_recursive_walker_next(wo_vm vm, wo_value args);
WO_API wo_api filesys_relative(wo_vm vm, wo_value args);
WO_API wo_api filesys_remove(wo_vm vm, wo_value args);
WO_API wo_api filesys_set_workpath(wo_vm vm, wo_value args);
WO_API wo_api filesys_size(wo_vm vm, wo_value args);
WO_API wo_api filesys_tmppath(wo_vm vm, wo_value args);
WO_API wo_api filesys_walker_next(wo_vm vm, wo_value args);
WO_API wo_api filesys_workpath(wo_vm vm, wo_value args);

WO_API wo_api thread_concurrency_count(wo_vm vm, wo_value args);
WO_API wo_api thread_create(wo_vm vm, wo_value args);
WO_API wo_api thread_mutex_create(wo_vm vm, wo_value args);
WO_API wo_api thread_mutex_lock(wo_vm vm, wo_value args);
WO_API wo_api thread_mutex_trylock(wo_vm vm, wo_value args);
WO_API wo_api thread_mutex_unlock(wo_vm vm, wo_value args);
WO_API wo_api thread_recursive_mutex_create(wo_vm vm, wo_value args);
WO_API wo_api thread_recursive_mutex_lock(wo_vm vm, wo_value args);
WO_API wo_api thread_recursive_mutex_trylock(wo_vm vm, wo_value args);
WO_API wo_api thread_recursive_mutex_unlock(wo_vm vm, wo_value args);
WO_API wo_api thread_rw_mutex_create(wo_vm vm, wo_value args);
WO_API wo_api thread_rw_mutex_lock(wo_vm vm, wo_value args);
WO_API wo_api thread_rw_mutex_lock_read(wo_vm vm, wo_value args);
WO_API wo_api thread_rw_mutex_trylock(wo_vm vm, wo_value args);
WO_API wo_api thread_rw_mutex_trylock_read(wo_vm vm, wo_value args);
WO_API wo_api thread_rw_mutex_unlock(wo_vm vm, wo_value args);
WO_API wo_api thread_rw_mutex_unlock_read(wo_vm vm, wo_value args);
WO_API wo_api thread_wait(wo_vm vm, wo_value args);

WO_API wo_api list_add(wo_vm vm, wo_value args);
WO_API wo_api list_add_front(wo_vm vm, wo_value args);
WO_API wo_api list_clear(wo_vm vm, wo_value args);
WO_API wo_api list_create(wo_vm vm, wo_value args);
WO_API wo_api list_empty(wo_vm vm, wo_value args);
WO_API wo_api list_erase(wo_vm vm, wo_value args);
WO_API wo_api list_insert(wo_vm vm, wo_value args);
WO_API wo_api list_iter(wo_vm vm, wo_value args);
WO_API wo_api list_iterator_next(wo_vm vm, wo_value args);
WO_API wo_api list_len(wo_vm vm, wo_value args);
WO_API wo_api list_pop_back(wo_vm vm, wo_value args);
WO_API wo_api list_pop_front(wo_vm vm, wo_value args);
WO_API wo_api list_set(wo_vm vm, wo_value args);

WO_API wo_api math_acos(wo_vm vm, wo_value args);
WO_API wo_api math_acosh(wo_vm vm, wo_value args);
WO_API wo_api math_asin(wo_vm vm, wo_value args);
WO_API wo_api math_asinh(wo_vm vm, wo_value args);
WO_API wo_api math_atan(wo_vm vm, wo_value args);
WO_API wo_api math_atan2(wo_vm vm, wo_value args);
WO_API wo_api math_atanh(wo_vm vm, wo_value args);
WO_API wo_api math_cbrt(wo_vm vm, wo_value args);
WO_API wo_api math_ceil(wo_vm vm, wo_value args);
WO_API wo_api math_ceilf(wo_vm vm, wo_value args);
WO_API wo_api math_cos(wo_vm vm, wo_value args);
WO_API wo_api math_cosh(wo_vm vm, wo_value args);
WO_API wo_api math_exp(wo_vm vm, wo_value args);
WO_API wo_api math_floor(wo_vm vm, wo_value args);
WO_API wo_api math_floorf(wo_vm vm, wo_value args);
WO_API wo_api math_hypot(wo_vm vm, wo_value args);
WO_API wo_api math_log10(wo_vm vm, wo_value args);
WO_API wo_api math_log2(wo_vm vm, wo_value args);
WO_API wo_api math_loge(wo_vm vm, wo_value args);
WO_API wo_api math_pow(wo_vm vm, wo_value args);
WO_API wo_api math_round(wo_vm vm, wo_value args);
WO_API wo_api math_roundf(wo_vm vm, wo_value args);
WO_API wo_api math_sin(wo_vm vm, wo_value args);
WO_API wo_api math_sinh(wo_vm vm, wo_value args);
WO_API wo_api math_sqrt(wo_vm vm, wo_value args);
WO_API wo_api math_tan(wo_vm vm, wo_value args);
WO_API wo_api math_tanh(wo_vm vm, wo_value args);
WO_API wo_api math_trunc(wo_vm vm, wo_value args);
WO_API wo_api math_truncf(wo_vm vm, wo_value args);

WO_API wo_api socket_epoll_add(wo_vm vm, wo_value args);
WO_API wo_api socket_epoll_create(wo_vm vm, wo_value args);
WO_API wo_api socket_epoll_del(wo_vm vm, wo_value args);
WO_API wo_api socket_epoll_mod(wo_vm vm, wo_value args);
WO_API wo_api socket_epoll_wait(wo_vm vm, wo_value args);
WO_API wo_api socket_error_to_string(wo_vm vm, wo_value args);
WO_API wo_api socket_ipv4_parse(wo_vm vm, wo_value args);
WO_API wo_api socket_ipv4_to_string(wo_vm vm, wo_value args);
WO_API wo_api socket_ipv4addr_create(wo_vm vm, wo_value args);
WO_API wo_api socket_ipv4addr_ipaddr(wo_vm vm, wo_value args);
WO_API wo_api socket_ipv6_parse(wo_vm vm, wo_value args);
WO_API wo_api socket_ipv6_to_string(wo_vm vm, wo_value args);
WO_API wo_api socket_ipv6addr_create(wo_vm vm, wo_value args);
WO_API wo_api socket_ipv6addr_ipaddr(wo_vm vm, wo_value args);
WO_API wo_api socket_tcp_fd(wo_vm vm, wo_value args);
WO_API wo_api socket_tcp_host_fd(wo_vm vm, wo_value args);
WO_API wo_api socket_tcp_host_ipv4_accept(wo_vm vm, wo_value args);
WO_API wo_api socket_tcp_host_ipv6_accept(wo_vm vm, wo_value args);
WO_API wo_api socket_tcp_ipv4_connect(wo_vm vm, wo_value args);
WO_API wo_api socket_tcp_ipv4_host(wo_vm vm, wo_value args);
WO_API wo_api socket_tcp_ipv6_connect(wo_vm vm, wo_value args);
WO_API wo_api socket_tcp_ipv6_host(wo_vm vm, wo_value args);
WO_API wo_api socket_tcp_recv_ipv4(wo_vm vm, wo_value args);
WO_API wo_api socket_tcp_recv_ipv6(wo_vm vm, wo_value args);
WO_API wo_api socket_tcp_recvbuf_ipv4(wo_vm vm, wo_value args);
WO_API wo_api socket_tcp_recvbuf_ipv6(wo_vm vm, wo_value args);
WO_API wo_api socket_tcp_send_buffer_ipv4(wo_vm vm, wo_value args);
WO_API wo_api socket_tcp_send_buffer_ipv6(wo_vm vm, wo_value args);
WO_API wo_api socket_tcp_send_ipv4(wo_vm vm, wo_value args);
WO_API wo_api socket_tcp_send_ipv6(wo_vm vm, wo_value args);
WO_API wo_api socket_udp_fd(wo_vm vm, wo_value args);
WO_API wo_api socket_udp_ipv4_bind(wo_vm vm, wo_value args);
WO_API wo_api socket_udp_ipv4_create(wo_vm vm, wo_value args);
WO_API wo_api socket_udp_ipv6_bind(wo_vm vm, wo_value args);
WO_API wo_api socket_udp_ipv6_create(wo_vm vm, wo_value args);
WO_API wo_api socket_udp_recvbuffrom_ipv4(wo_vm vm, wo_value args);
WO_API wo_api socket_udp_recvbuffrom_ipv6(wo_vm vm, wo_value args);
WO_API wo_api socket_udp_recvfrom_ipv4(wo_vm vm, wo_value args);
WO_API wo_api socket_udp_recvfrom_ipv6(wo_vm vm, wo_value args);
WO_API wo_api socket_udp_sendto_buffer_ipv4(wo_vm vm, wo_value args);
WO_API wo_api socket_udp_sendto_buffer_ipv6(wo_vm vm, wo_value args);
WO_API wo_api socket_udp_sendto_ipv4(wo_vm vm, wo_value args);
WO_API wo_api socket_udp_sendto_ipv6(wo_vm vm, wo_value args);

WO_API wo_api vm_create(wo_vm vm, wo_value args);
WO_API wo_api vm_create_virtual_script(wo_vm vm, wo_value args);
WO_API wo_api vm_invoke(wo_vm vm, wo_value args);
WO_API wo_api vm_jit(wo_vm vm, wo_value args);
WO_API wo_api vm_load(wo_vm vm, wo_value args);
WO_API wo_api vm_run(wo_vm vm, wo_value args);
WO_API wo_api vm_save_binary(wo_vm vm, wo_value args);
WO_API wo_api vmbin_address(wo_vm vm, wo_value args);


WO_API void je_static_wo_pkg_socket_entry(wo_dylib_handle_t lib_instance);

WO_API void je_static_wo_pkg_socket_exit();

#endif

std::vector<wo_dylib_handle_t> _je_3rd_pkg_lib_handle;
void je_extern_lib_3rd_pkgs_init()
{
    assert(_je_3rd_pkg_lib_handle.empty()); 

#if JE4_STATIC_LINK_MODULE_AND_PKGS
    wo_extern_lib_func_t libasync_fs[] = {
        wo_extern_lib_func_t{"async_create", (void*)&async_create},
        wo_extern_lib_func_t{"async_dispatch", (void*)&async_dispatch},
        WO_EXTERN_LIB_FUNC_END,
    };
    _je_3rd_pkg_lib_handle.push_back(
        wo_fake_lib("libasync", libasync_fs, nullptr));

    wo_extern_lib_func_t libbuffer_fs[] = {
        wo_extern_lib_func_t{"buffer_append_buffer_builder", (void*)&buffer_append_buffer_builder},
        wo_extern_lib_func_t{"buffer_append_buffer_builder_builder", (void*)&buffer_append_buffer_builder_builder},
        wo_extern_lib_func_t{"buffer_append_f32_builder", (void*)&buffer_append_f32_builder},
        wo_extern_lib_func_t{"buffer_append_f64_builder", (void*)&buffer_append_f64_builder},
        wo_extern_lib_func_t{"buffer_append_handle_builder", (void*)&buffer_append_handle_builder},
        wo_extern_lib_func_t{"buffer_append_i16_builder", (void*)&buffer_append_i16_builder},
        wo_extern_lib_func_t{"buffer_append_i32_builder", (void*)&buffer_append_i32_builder},
        wo_extern_lib_func_t{"buffer_append_i64_builder", (void*)&buffer_append_i64_builder},
        wo_extern_lib_func_t{"buffer_append_i8_builder", (void*)&buffer_append_i8_builder},
        wo_extern_lib_func_t{"buffer_append_string_builder", (void*)&buffer_append_string_builder},
        wo_extern_lib_func_t{"buffer_append_ui16_builder", (void*)&buffer_append_ui16_builder},
        wo_extern_lib_func_t{"buffer_append_ui32_builder", (void*)&buffer_append_ui32_builder},
        wo_extern_lib_func_t{"buffer_append_ui8_builder", (void*)&buffer_append_ui8_builder},
        wo_extern_lib_func_t{"buffer_appenddouble_buffer", (void*)&buffer_appenddouble_buffer},
        wo_extern_lib_func_t{"buffer_appendfloat_buffer", (void*)&buffer_appendfloat_buffer},
        wo_extern_lib_func_t{"buffer_appendi16_buffer", (void*)&buffer_appendi16_buffer},
        wo_extern_lib_func_t{"buffer_appendi32_buffer", (void*)&buffer_appendi32_buffer},
        wo_extern_lib_func_t{"buffer_appendi64_buffer", (void*)&buffer_appendi64_buffer},
        wo_extern_lib_func_t{"buffer_appendi8_buffer", (void*)&buffer_appendi8_buffer},
        wo_extern_lib_func_t{"buffer_appendui16_buffer", (void*)&buffer_appendui16_buffer},
        wo_extern_lib_func_t{"buffer_appendui32_buffer", (void*)&buffer_appendui32_buffer},
        wo_extern_lib_func_t{"buffer_appendui64_buffer", (void*)&buffer_appendui64_buffer},
        wo_extern_lib_func_t{"buffer_appendui8_buffer", (void*)&buffer_appendui8_buffer},
        wo_extern_lib_func_t{"buffer_clear_builder", (void*)&buffer_clear_builder},
        wo_extern_lib_func_t{"buffer_create_builder", (void*)&buffer_create_builder},
        wo_extern_lib_func_t{"buffer_create_from_allocation_builder", (void*)&buffer_create_from_allocation_builder},
        wo_extern_lib_func_t{"buffer_create_from_buffer_builder", (void*)&buffer_create_from_buffer_builder},
        wo_extern_lib_func_t{"buffer_create_from_file_builder", (void*)&buffer_create_from_file_builder},
        wo_extern_lib_func_t{"buffer_createdouble_buffer", (void*)&buffer_createdouble_buffer},
        wo_extern_lib_func_t{"buffer_createfloat_buffer", (void*)&buffer_createfloat_buffer},
        wo_extern_lib_func_t{"buffer_createi16_buffer", (void*)&buffer_createi16_buffer},
        wo_extern_lib_func_t{"buffer_createi32_buffer", (void*)&buffer_createi32_buffer},
        wo_extern_lib_func_t{"buffer_createi64_buffer", (void*)&buffer_createi64_buffer},
        wo_extern_lib_func_t{"buffer_createi8_buffer", (void*)&buffer_createi8_buffer},
        wo_extern_lib_func_t{"buffer_createui16_buffer", (void*)&buffer_createui16_buffer},
        wo_extern_lib_func_t{"buffer_createui32_buffer", (void*)&buffer_createui32_buffer},
        wo_extern_lib_func_t{"buffer_createui64_buffer", (void*)&buffer_createui64_buffer},
        wo_extern_lib_func_t{"buffer_createui8_buffer", (void*)&buffer_createui8_buffer},
        wo_extern_lib_func_t{"buffer_find_break_builder", (void*)&buffer_find_break_builder},
        wo_extern_lib_func_t{"buffer_find_cchar_builder", (void*)&buffer_find_cchar_builder},
        wo_extern_lib_func_t{"buffer_find_string_builder", (void*)&buffer_find_string_builder},
        wo_extern_lib_func_t{"buffer_int_i16", (void*)&buffer_int_i16},
        wo_extern_lib_func_t{"buffer_int_i16_be", (void*)&buffer_int_i16_be},
        wo_extern_lib_func_t{"buffer_int_i16_le", (void*)&buffer_int_i16_le},
        wo_extern_lib_func_t{"buffer_int_i32", (void*)&buffer_int_i32},
        wo_extern_lib_func_t{"buffer_int_i32_be", (void*)&buffer_int_i32_be},
        wo_extern_lib_func_t{"buffer_int_i32_le", (void*)&buffer_int_i32_le},
        wo_extern_lib_func_t{"buffer_int_i64_be", (void*)&buffer_int_i64_be},
        wo_extern_lib_func_t{"buffer_int_i64_le", (void*)&buffer_int_i64_le},
        wo_extern_lib_func_t{"buffer_int_ui16", (void*)&buffer_int_ui16},
        wo_extern_lib_func_t{"buffer_int_ui16_be", (void*)&buffer_int_ui16_be},
        wo_extern_lib_func_t{"buffer_int_ui16_le", (void*)&buffer_int_ui16_le},
        wo_extern_lib_func_t{"buffer_int_ui32", (void*)&buffer_int_ui32},
        wo_extern_lib_func_t{"buffer_int_ui32_be", (void*)&buffer_int_ui32_be},
        wo_extern_lib_func_t{"buffer_int_ui32_le", (void*)&buffer_int_ui32_le},
        wo_extern_lib_func_t{"buffer_length_builder", (void*)&buffer_length_builder},
        wo_extern_lib_func_t{"buffer_open_builder", (void*)&buffer_open_builder},
        wo_extern_lib_func_t{"buffer_peek_buffer_builder", (void*)&buffer_peek_buffer_builder},
        wo_extern_lib_func_t{"buffer_peek_f32_builder", (void*)&buffer_peek_f32_builder},
        wo_extern_lib_func_t{"buffer_peek_f64_builder", (void*)&buffer_peek_f64_builder},
        wo_extern_lib_func_t{"buffer_peek_handle_builder", (void*)&buffer_peek_handle_builder},
        wo_extern_lib_func_t{"buffer_peek_i16_builder", (void*)&buffer_peek_i16_builder},
        wo_extern_lib_func_t{"buffer_peek_i32_builder", (void*)&buffer_peek_i32_builder},
        wo_extern_lib_func_t{"buffer_peek_i64_builder", (void*)&buffer_peek_i64_builder},
        wo_extern_lib_func_t{"buffer_peek_i8_builder", (void*)&buffer_peek_i8_builder},
        wo_extern_lib_func_t{"buffer_peek_ui16_builder", (void*)&buffer_peek_ui16_builder},
        wo_extern_lib_func_t{"buffer_peek_ui32_builder", (void*)&buffer_peek_ui32_builder},
        wo_extern_lib_func_t{"buffer_peek_ui8_builder", (void*)&buffer_peek_ui8_builder},
        wo_extern_lib_func_t{"buffer_peekdouble_buffer", (void*)&buffer_peekdouble_buffer},
        wo_extern_lib_func_t{"buffer_peekfloat_buffer", (void*)&buffer_peekfloat_buffer},
        wo_extern_lib_func_t{"buffer_peeki16_buffer", (void*)&buffer_peeki16_buffer},
        wo_extern_lib_func_t{"buffer_peeki32_buffer", (void*)&buffer_peeki32_buffer},
        wo_extern_lib_func_t{"buffer_peeki64_buffer", (void*)&buffer_peeki64_buffer},
        wo_extern_lib_func_t{"buffer_peeki8_buffer", (void*)&buffer_peeki8_buffer},
        wo_extern_lib_func_t{"buffer_peekui16_buffer", (void*)&buffer_peekui16_buffer},
        wo_extern_lib_func_t{"buffer_peekui32_buffer", (void*)&buffer_peekui32_buffer},
        wo_extern_lib_func_t{"buffer_peekui64_buffer", (void*)&buffer_peekui64_buffer},
        wo_extern_lib_func_t{"buffer_peekui8_buffer", (void*)&buffer_peekui8_buffer},
        wo_extern_lib_func_t{"buffer_ptr_to_read_builder", (void*)&buffer_ptr_to_read_builder},
        wo_extern_lib_func_t{"buffer_ptr_to_write_builder", (void*)&buffer_ptr_to_write_builder},
        wo_extern_lib_func_t{"buffer_random", (void*)&buffer_random},
        wo_extern_lib_func_t{"buffer_read_buffer_builder", (void*)&buffer_read_buffer_builder},
        wo_extern_lib_func_t{"buffer_read_f32_builder", (void*)&buffer_read_f32_builder},
        wo_extern_lib_func_t{"buffer_read_f64_builder", (void*)&buffer_read_f64_builder},
        wo_extern_lib_func_t{"buffer_read_handle_builder", (void*)&buffer_read_handle_builder},
        wo_extern_lib_func_t{"buffer_read_i16_builder", (void*)&buffer_read_i16_builder},
        wo_extern_lib_func_t{"buffer_read_i32_builder", (void*)&buffer_read_i32_builder},
        wo_extern_lib_func_t{"buffer_read_i64_builder", (void*)&buffer_read_i64_builder},
        wo_extern_lib_func_t{"buffer_read_i8_builder", (void*)&buffer_read_i8_builder},
        wo_extern_lib_func_t{"buffer_read_ui16_builder", (void*)&buffer_read_ui16_builder},
        wo_extern_lib_func_t{"buffer_read_ui32_builder", (void*)&buffer_read_ui32_builder},
        wo_extern_lib_func_t{"buffer_read_ui8_builder", (void*)&buffer_read_ui8_builder},
        wo_extern_lib_func_t{"buffer_reduce_builder", (void*)&buffer_reduce_builder},
        wo_extern_lib_func_t{"buffer_resize_builder", (void*)&buffer_resize_builder},
        wo_extern_lib_func_t{"buffer_sub_buffer", (void*)&buffer_sub_buffer},
        wo_extern_lib_func_t{"buffer_subto_buffer", (void*)&buffer_subto_buffer},
        wo_extern_lib_func_t{"buffer_trim_builder", (void*)&buffer_trim_builder},
        wo_extern_lib_func_t{"buffer_write_f32_builder", (void*)&buffer_write_f32_builder},
        wo_extern_lib_func_t{"buffer_write_f64_builder", (void*)&buffer_write_f64_builder},
        wo_extern_lib_func_t{"buffer_write_handle_builder", (void*)&buffer_write_handle_builder},
        wo_extern_lib_func_t{"buffer_write_i16_builder", (void*)&buffer_write_i16_builder},
        wo_extern_lib_func_t{"buffer_write_i32_builder", (void*)&buffer_write_i32_builder},
        wo_extern_lib_func_t{"buffer_write_i64_builder", (void*)&buffer_write_i64_builder},
        wo_extern_lib_func_t{"buffer_write_i8_builder", (void*)&buffer_write_i8_builder},
        wo_extern_lib_func_t{"buffer_write_ui16_builder", (void*)&buffer_write_ui16_builder},
        wo_extern_lib_func_t{"buffer_write_ui32_builder", (void*)&buffer_write_ui32_builder},
        wo_extern_lib_func_t{"buffer_write_ui8_builder", (void*)&buffer_write_ui8_builder},
        WO_EXTERN_LIB_FUNC_END,
    };
    _je_3rd_pkg_lib_handle.push_back(
        wo_fake_lib("libbuffer", libbuffer_fs, nullptr));

    wo_extern_lib_func_t libprocess_fs[] = {
        wo_extern_lib_func_t{"process_create_process", (void*)&process_create_process},
        wo_extern_lib_func_t{"process_flock_create", (void*)&process_flock_create},
        wo_extern_lib_func_t{"process_flock_lock", (void*)&process_flock_lock},
        wo_extern_lib_func_t{"process_flock_trylock", (void*)&process_flock_trylock},
        wo_extern_lib_func_t{"process_flock_unlock", (void*)&process_flock_unlock},
        wo_extern_lib_func_t{"process_getpid", (void*)&process_getpid},
        wo_extern_lib_func_t{"process_wait_process", (void*)&process_wait_process},
        WO_EXTERN_LIB_FUNC_END,
    };
    _je_3rd_pkg_lib_handle.push_back(
        wo_fake_lib("libprocess", libprocess_fs, nullptr));

    wo_extern_lib_func_t libimage_fs[] = {
        wo_extern_lib_func_t{"wo_libimage_create_image", (void*)&wo_libimage_create_image},
        wo_extern_lib_func_t{"wo_libimage_get_pix_from_image", (void*)&wo_libimage_get_pix_from_image},
        wo_extern_lib_func_t{"wo_libimage_get_size_of_image", (void*)&wo_libimage_get_size_of_image},
        wo_extern_lib_func_t{"wo_libimage_open_image", (void*)&wo_libimage_open_image},
        wo_extern_lib_func_t{"wo_libimage_save_image", (void*)&wo_libimage_save_image},
        wo_extern_lib_func_t{"wo_libimage_set_pix_to_image", (void*)&wo_libimage_set_pix_to_image},
        WO_EXTERN_LIB_FUNC_END,
    };
    _je_3rd_pkg_lib_handle.push_back(
        wo_fake_lib("libimage", libimage_fs, nullptr));

    wo_extern_lib_func_t libcrashhandler_fs[] = {
        wo_extern_lib_func_t{"crashhandler_init", (void*)&crashhandler_init},
        WO_EXTERN_LIB_FUNC_END,
    };
    _je_3rd_pkg_lib_handle.push_back(
        wo_fake_lib("libcrashhandler", libcrashhandler_fs, nullptr));

    wo_extern_lib_func_t libregex_fs[] = {
        wo_extern_lib_func_t{"regex_create", (void*)&regex_create},
        wo_extern_lib_func_t{"regex_match", (void*)&regex_match},
        wo_extern_lib_func_t{"regex_replace", (void*)&regex_replace},
        wo_extern_lib_func_t{"regex_search", (void*)&regex_search},
        wo_extern_lib_func_t{"regex_search_next", (void*)&regex_search_next},
        WO_EXTERN_LIB_FUNC_END,
    };
    _je_3rd_pkg_lib_handle.push_back(
        wo_fake_lib("libregex", libregex_fs, nullptr));

    wo_extern_lib_func_t libfsys_fs[] = {
        wo_extern_lib_func_t{"file_is_same_file", (void*)&file_is_same_file},
        wo_extern_lib_func_t{"file_readall", (void*)&file_readall},
        wo_extern_lib_func_t{"file_writeall", (void*)&file_writeall},
        wo_extern_lib_func_t{"filesys_copy", (void*)&filesys_copy},
        wo_extern_lib_func_t{"filesys_create_recursive_walk", (void*)&filesys_create_recursive_walk},
        wo_extern_lib_func_t{"filesys_create_walk", (void*)&filesys_create_walk},
        wo_extern_lib_func_t{"filesys_exist", (void*)&filesys_exist},
        wo_extern_lib_func_t{"filesys_extension", (void*)&filesys_extension},
        wo_extern_lib_func_t{"filesys_filename", (void*)&filesys_filename},
        wo_extern_lib_func_t{"filesys_isdir", (void*)&filesys_isdir},
        wo_extern_lib_func_t{"filesys_isfile", (void*)&filesys_isfile},
        wo_extern_lib_func_t{"filesys_last_write_time", (void*)&filesys_last_write_time},
        wo_extern_lib_func_t{"filesys_mkdir", (void*)&filesys_mkdir},
        wo_extern_lib_func_t{"filesys_move", (void*)&filesys_move},
        wo_extern_lib_func_t{"filesys_normalize", (void*)&filesys_normalize},
        wo_extern_lib_func_t{"filesys_parent", (void*)&filesys_parent},
        wo_extern_lib_func_t{"filesys_purename", (void*)&filesys_purename},
        wo_extern_lib_func_t{"filesys_realpath", (void*)&filesys_realpath},
        wo_extern_lib_func_t{"filesys_recursive_walker_next", (void*)&filesys_recursive_walker_next},
        wo_extern_lib_func_t{"filesys_relative", (void*)&filesys_relative},
        wo_extern_lib_func_t{"filesys_remove", (void*)&filesys_remove},
        wo_extern_lib_func_t{"filesys_set_workpath", (void*)&filesys_set_workpath},
        wo_extern_lib_func_t{"filesys_size", (void*)&filesys_size},
        wo_extern_lib_func_t{"filesys_tmppath", (void*)&filesys_tmppath},
        wo_extern_lib_func_t{"filesys_walker_next", (void*)&filesys_walker_next},
        wo_extern_lib_func_t{"filesys_workpath", (void*)&filesys_workpath},
        WO_EXTERN_LIB_FUNC_END,
    };
    _je_3rd_pkg_lib_handle.push_back(
        wo_fake_lib("libfsys", libfsys_fs, nullptr));

    wo_extern_lib_func_t libthread_fs[] = {
        wo_extern_lib_func_t{"thread_concurrency_count", (void*)&thread_concurrency_count},
        wo_extern_lib_func_t{"thread_create", (void*)&thread_create},
        wo_extern_lib_func_t{"thread_mutex_create", (void*)&thread_mutex_create},
        wo_extern_lib_func_t{"thread_mutex_lock", (void*)&thread_mutex_lock},
        wo_extern_lib_func_t{"thread_mutex_trylock", (void*)&thread_mutex_trylock},
        wo_extern_lib_func_t{"thread_mutex_unlock", (void*)&thread_mutex_unlock},
        wo_extern_lib_func_t{"thread_recursive_mutex_create", (void*)&thread_recursive_mutex_create},
        wo_extern_lib_func_t{"thread_recursive_mutex_lock", (void*)&thread_recursive_mutex_lock},
        wo_extern_lib_func_t{"thread_recursive_mutex_trylock", (void*)&thread_recursive_mutex_trylock},
        wo_extern_lib_func_t{"thread_recursive_mutex_unlock", (void*)&thread_recursive_mutex_unlock},
        wo_extern_lib_func_t{"thread_rw_mutex_create", (void*)&thread_rw_mutex_create},
        wo_extern_lib_func_t{"thread_rw_mutex_lock", (void*)&thread_rw_mutex_lock},
        wo_extern_lib_func_t{"thread_rw_mutex_lock_read", (void*)&thread_rw_mutex_lock_read},
        wo_extern_lib_func_t{"thread_rw_mutex_trylock", (void*)&thread_rw_mutex_trylock},
        wo_extern_lib_func_t{"thread_rw_mutex_trylock_read", (void*)&thread_rw_mutex_trylock_read},
        wo_extern_lib_func_t{"thread_rw_mutex_unlock", (void*)&thread_rw_mutex_unlock},
        wo_extern_lib_func_t{"thread_rw_mutex_unlock_read", (void*)&thread_rw_mutex_unlock_read},
        wo_extern_lib_func_t{"thread_wait", (void*)&thread_wait},
        WO_EXTERN_LIB_FUNC_END,
    };
    _je_3rd_pkg_lib_handle.push_back(
        wo_fake_lib("libthread", libthread_fs, nullptr));

    wo_extern_lib_func_t liblist_fs[] = {
        wo_extern_lib_func_t{"list_add", (void*)&list_add},
        wo_extern_lib_func_t{"list_add_front", (void*)&list_add_front},
        wo_extern_lib_func_t{"list_clear", (void*)&list_clear},
        wo_extern_lib_func_t{"list_create", (void*)&list_create},
        wo_extern_lib_func_t{"list_empty", (void*)&list_empty},
        wo_extern_lib_func_t{"list_erase", (void*)&list_erase},
        wo_extern_lib_func_t{"list_insert", (void*)&list_insert},
        wo_extern_lib_func_t{"list_iter", (void*)&list_iter},
        wo_extern_lib_func_t{"list_iterator_next", (void*)&list_iterator_next},
        wo_extern_lib_func_t{"list_len", (void*)&list_len},
        wo_extern_lib_func_t{"list_pop_back", (void*)&list_pop_back},
        wo_extern_lib_func_t{"list_pop_front", (void*)&list_pop_front},
        wo_extern_lib_func_t{"list_set", (void*)&list_set},
        WO_EXTERN_LIB_FUNC_END,
    };
    _je_3rd_pkg_lib_handle.push_back(
        wo_fake_lib("liblist", liblist_fs, nullptr));

    wo_extern_lib_func_t libmath_fs[] = {
        wo_extern_lib_func_t{"math_acos", (void*)&math_acos},
        wo_extern_lib_func_t{"math_acosh", (void*)&math_acosh},
        wo_extern_lib_func_t{"math_asin", (void*)&math_asin},
        wo_extern_lib_func_t{"math_asinh", (void*)&math_asinh},
        wo_extern_lib_func_t{"math_atan", (void*)&math_atan},
        wo_extern_lib_func_t{"math_atan2", (void*)&math_atan2},
        wo_extern_lib_func_t{"math_atanh", (void*)&math_atanh},
        wo_extern_lib_func_t{"math_cbrt", (void*)&math_cbrt},
        wo_extern_lib_func_t{"math_ceil", (void*)&math_ceil},
        wo_extern_lib_func_t{"math_ceilf", (void*)&math_ceilf},
        wo_extern_lib_func_t{"math_cos", (void*)&math_cos},
        wo_extern_lib_func_t{"math_cosh", (void*)&math_cosh},
        wo_extern_lib_func_t{"math_exp", (void*)&math_exp},
        wo_extern_lib_func_t{"math_floor", (void*)&math_floor},
        wo_extern_lib_func_t{"math_floorf", (void*)&math_floorf},
        wo_extern_lib_func_t{"math_hypot", (void*)&math_hypot},
        wo_extern_lib_func_t{"math_log10", (void*)&math_log10},
        wo_extern_lib_func_t{"math_log2", (void*)&math_log2},
        wo_extern_lib_func_t{"math_loge", (void*)&math_loge},
        wo_extern_lib_func_t{"math_pow", (void*)&math_pow},
        wo_extern_lib_func_t{"math_round", (void*)&math_round},
        wo_extern_lib_func_t{"math_roundf", (void*)&math_roundf},
        wo_extern_lib_func_t{"math_sin", (void*)&math_sin},
        wo_extern_lib_func_t{"math_sinh", (void*)&math_sinh},
        wo_extern_lib_func_t{"math_sqrt", (void*)&math_sqrt},
        wo_extern_lib_func_t{"math_tan", (void*)&math_tan},
        wo_extern_lib_func_t{"math_tanh", (void*)&math_tanh},
        wo_extern_lib_func_t{"math_trunc", (void*)&math_trunc},
        wo_extern_lib_func_t{"math_truncf", (void*)&math_truncf},
        WO_EXTERN_LIB_FUNC_END,
    };
    _je_3rd_pkg_lib_handle.push_back(
        wo_fake_lib("libmath", libmath_fs, nullptr));

    wo_extern_lib_func_t libsocket_fs[] = {
        wo_extern_lib_func_t{"socket_epoll_add", (void*)&socket_epoll_add},
        wo_extern_lib_func_t{"socket_epoll_create", (void*)&socket_epoll_create},
        wo_extern_lib_func_t{"socket_epoll_del", (void*)&socket_epoll_del},
        wo_extern_lib_func_t{"socket_epoll_mod", (void*)&socket_epoll_mod},
        wo_extern_lib_func_t{"socket_epoll_wait", (void*)&socket_epoll_wait},
        wo_extern_lib_func_t{"socket_error_to_string", (void*)&socket_error_to_string},
        wo_extern_lib_func_t{"socket_ipv4_parse", (void*)&socket_ipv4_parse},
        wo_extern_lib_func_t{"socket_ipv4_to_string", (void*)&socket_ipv4_to_string},
        wo_extern_lib_func_t{"socket_ipv4addr_create", (void*)&socket_ipv4addr_create},
        wo_extern_lib_func_t{"socket_ipv4addr_ipaddr", (void*)&socket_ipv4addr_ipaddr},
        wo_extern_lib_func_t{"socket_ipv6_parse", (void*)&socket_ipv6_parse},
        wo_extern_lib_func_t{"socket_ipv6_to_string", (void*)&socket_ipv6_to_string},
        wo_extern_lib_func_t{"socket_ipv6addr_create", (void*)&socket_ipv6addr_create},
        wo_extern_lib_func_t{"socket_ipv6addr_ipaddr", (void*)&socket_ipv6addr_ipaddr},
        wo_extern_lib_func_t{"socket_tcp_fd", (void*)&socket_tcp_fd},
        wo_extern_lib_func_t{"socket_tcp_host_fd", (void*)&socket_tcp_host_fd},
        wo_extern_lib_func_t{"socket_tcp_host_ipv4_accept", (void*)&socket_tcp_host_ipv4_accept},
        wo_extern_lib_func_t{"socket_tcp_host_ipv6_accept", (void*)&socket_tcp_host_ipv6_accept},
        wo_extern_lib_func_t{"socket_tcp_ipv4_connect", (void*)&socket_tcp_ipv4_connect},
        wo_extern_lib_func_t{"socket_tcp_ipv4_host", (void*)&socket_tcp_ipv4_host},
        wo_extern_lib_func_t{"socket_tcp_ipv6_connect", (void*)&socket_tcp_ipv6_connect},
        wo_extern_lib_func_t{"socket_tcp_ipv6_host", (void*)&socket_tcp_ipv6_host},
        wo_extern_lib_func_t{"socket_tcp_recv_ipv4", (void*)&socket_tcp_recv_ipv4},
        wo_extern_lib_func_t{"socket_tcp_recv_ipv6", (void*)&socket_tcp_recv_ipv6},
        wo_extern_lib_func_t{"socket_tcp_recvbuf_ipv4", (void*)&socket_tcp_recvbuf_ipv4},
        wo_extern_lib_func_t{"socket_tcp_recvbuf_ipv6", (void*)&socket_tcp_recvbuf_ipv6},
        wo_extern_lib_func_t{"socket_tcp_send_buffer_ipv4", (void*)&socket_tcp_send_buffer_ipv4},
        wo_extern_lib_func_t{"socket_tcp_send_buffer_ipv6", (void*)&socket_tcp_send_buffer_ipv6},
        wo_extern_lib_func_t{"socket_tcp_send_ipv4", (void*)&socket_tcp_send_ipv4},
        wo_extern_lib_func_t{"socket_tcp_send_ipv6", (void*)&socket_tcp_send_ipv6},
        wo_extern_lib_func_t{"socket_udp_fd", (void*)&socket_udp_fd},
        wo_extern_lib_func_t{"socket_udp_ipv4_bind", (void*)&socket_udp_ipv4_bind},
        wo_extern_lib_func_t{"socket_udp_ipv4_create", (void*)&socket_udp_ipv4_create},
        wo_extern_lib_func_t{"socket_udp_ipv6_bind", (void*)&socket_udp_ipv6_bind},
        wo_extern_lib_func_t{"socket_udp_ipv6_create", (void*)&socket_udp_ipv6_create},
        wo_extern_lib_func_t{"socket_udp_recvbuffrom_ipv4", (void*)&socket_udp_recvbuffrom_ipv4},
        wo_extern_lib_func_t{"socket_udp_recvbuffrom_ipv6", (void*)&socket_udp_recvbuffrom_ipv6},
        wo_extern_lib_func_t{"socket_udp_recvfrom_ipv4", (void*)&socket_udp_recvfrom_ipv4},
        wo_extern_lib_func_t{"socket_udp_recvfrom_ipv6", (void*)&socket_udp_recvfrom_ipv6},
        wo_extern_lib_func_t{"socket_udp_sendto_buffer_ipv4", (void*)&socket_udp_sendto_buffer_ipv4},
        wo_extern_lib_func_t{"socket_udp_sendto_buffer_ipv6", (void*)&socket_udp_sendto_buffer_ipv6},
        wo_extern_lib_func_t{"socket_udp_sendto_ipv4", (void*)&socket_udp_sendto_ipv4},
        wo_extern_lib_func_t{"socket_udp_sendto_ipv6", (void*)&socket_udp_sendto_ipv6},
        wo_extern_lib_func_t{"wolib_entry", (void*)&je_static_wo_pkg_socket_entry},
        wo_extern_lib_func_t{"wolib_exit", (void*)&je_static_wo_pkg_socket_exit},
        WO_EXTERN_LIB_FUNC_END,
    };
    _je_3rd_pkg_lib_handle.push_back(
        wo_fake_lib("libsocket", libsocket_fs, nullptr));

    wo_extern_lib_func_t libvm_fs[] = {
        wo_extern_lib_func_t{"vm_create", (void*)&vm_create},
        wo_extern_lib_func_t{"vm_create_virtual_script", (void*)&vm_create_virtual_script},
        wo_extern_lib_func_t{"vm_invoke", (void*)&vm_invoke},
        wo_extern_lib_func_t{"vm_jit", (void*)&vm_jit},
        wo_extern_lib_func_t{"vm_load", (void*)&vm_load},
        wo_extern_lib_func_t{"vm_run", (void*)&vm_run},
        wo_extern_lib_func_t{"vm_save_binary", (void*)&vm_save_binary},
        wo_extern_lib_func_t{"vmbin_address", (void*)&vmbin_address},
        WO_EXTERN_LIB_FUNC_END,
    };
    _je_3rd_pkg_lib_handle.push_back(
        wo_fake_lib("libvm", libvm_fs, nullptr));


#endif    
}

void je_extern_lib_3rd_pkgs_finish()
{

    for (auto* lib : _je_3rd_pkg_lib_handle)
    {
        assert(lib != nullptr);
        wo_unload_lib(lib, WO_DYLIB_UNREF_AND_BURY);
    }
    _je_3rd_pkg_lib_handle.clear();
}
