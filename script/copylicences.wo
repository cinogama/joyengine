import woo::std;
import build::pkg::filesystem;
import build::pkg::try;

using filesys;

let third_party_located_path = workpath() / "3rd";
let build_path = workpath() / "build";

func copy_all_licenses()
{
    try! third_party_path = subpath(third_party_located_path)
        ->> \paths = paths
            ->  forall(\path = isdir(path);)
            ;
        ;
    for (let _, _3rd_path : third_party_path)
    {
        try! subpath_of_3rd = subpath(_3rd_path);
        for (let _, p : subpath_of_3rd)
        {
            if (filename(p)->lower->find("license") != -1
                || filename(p)->lower->find("copying") != -1)
            {
                let relpath = p->tostring()->sub(third_party_located_path->tostring->len);

                let target_path = build_path / "licenses" / relpath;
                do mkdir(parent(target_path));
                match (copy(p, target_path))
                {
                err(e)? return err(e);
                ok(_)?;
                }
            }
        }
    }
    return result::ok(do nil);
}

match (copy_all_licenses())
{
ok(_)?;
err(_)?
    std::panic("Failed to get 3rd licenses");
}
